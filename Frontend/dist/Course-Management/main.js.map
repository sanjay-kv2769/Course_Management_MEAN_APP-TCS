{"version":3,"sources":["./src/app/edit-course/edit-course.component.ts","./src/app/edit-course/edit-course.component.html","./src/app/profile-user/profile.model.ts","./src/app/coursetaken-requests/coursetaken-requests.component.ts","./src/app/coursetaken-requests/coursetaken-requests.component.html","./src/app/requested-courses/requested-courses.component.ts","./src/app/requested-courses/requested-courses.component.html","./src/app/edit-prof/edit-prof.component.ts","./src/app/edit-prof/edit-prof.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/token-interceptor.service.ts","./src/environments/environment.ts","./src/app/courses/courses.component.ts","./src/app/courses/courses.component.html","./src/app/profile-user/profile-user.component.ts","./src/app/profile-user/profile-user.component.html","./src/app/course-details/enroll.model.ts","./src/app/edit-user/edit-user.component.ts","./src/app/edit-user/edit-user.component.html","./src/app/message-notification/message-notification.component.ts","./src/app/message-notification/message-notification.component.html","./src/app/course-taken/course-taken.component.ts","./src/app/course-taken/course-taken.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/signup-user/signup-user.component.ts","./src/app/signup-user/signup-user.component.html","./src/app/prof.service.ts","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/login-user/login-user.component.ts","./src/app/login-user/login-user.component.html","./src/app/login-prof/login-prof.component.ts","./src/app/login-prof/login-prof.component.html","./src/app/course-notification/course-notification.component.ts","./src/app/course-notification/course-notification.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/course-details/course-details.component.ts","./src/app/course-details/course-details.component.html","./src/app/add-course/add-course.component.ts","./src/app/add-course/add-course.component.html","./src/app/add-course/course.model.ts","./src/app/profile-prof/profprofile.model.ts","./src/app/coursetaken-requests/message.model.ts","./src/app/coursetaken-details/coursetaken-details.component.ts","./src/app/coursetaken-details/coursetaken-details.component.html","./src/app/profile-prof/profile-prof.component.ts","./src/app/profile-prof/profile-prof.component.html","./src/app/signup-prof/signup-prof.component.ts","./src/app/signup-prof/signup-prof.component.html","./src/app/course-notification/notification.model.ts","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProfService } from '../prof.service';\nimport { CourseModel } from '../add-course/course.model';\nimport { UserService } from '../user.service';\n\n\n@Component({\n  selector: 'app-edit-course',\n  templateUrl: './edit-course.component.html',\n  styleUrls: ['./edit-course.component.css']\n})\nexport class EditCourseComponent implements OnInit {\n\n  courseItem = new CourseModel('','','','','','','','','','');\n\n\n  constructor(private router:Router,private profService:ProfService,private userService:UserService) { }\n\n  ngOnInit(): void {\n\n    let courseId=localStorage.getItem(\"editCourseId\");\n    this.profService.getCourseDetails(courseId)\n    .subscribe((data)=>\n    { \n      this.courseItem=JSON.parse(JSON.stringify(data));\n      console.log(this.courseItem);\n      console.log(\"get\");\n\n    })\n\n  }\n\n  EditCourse()\n  {\n    this.profService.editCourse(this.courseItem);\n    alert(\"success\");\n    this.router.navigate(['/course-taken']);\n  }\n\n}\n","\n<div class='card-header' style=\"width: 100\">\n\n    <div class='card' style=\"width: 100%\">\n   \n       <div class='card-header' style=\"width: 100\">\n           <h3>Edit Course </h3>\n       </div>\n       <div class='card-body' style=\"width: 100\">\n           <div class=\"row justify-content-center\" >    \n               \n\n            <div class=\"col-md-8\"> \n        \n                <div class=\"panel\">\n                  <div class=\"panel-body\">\n                    \n                    \n               \n                    <!--/stories-->\n                    <form (ngSubmit)=\"EditCourse()\" #addcourseform=\"ngForm\">\n                      <div class=\"form-group\">\n                          <label >Course Name</label>\n                          <input type=\"text\" name=\"c_name\" [(ngModel)]=\"courseItem.name\" #cname='ngModel' placeholder=\"Type Name Of Course\" class=\"form-control\"  required>\n                          <small class=\"text-danger\" [class.d-none]=\"cname.valid || cname.touched\">Empty Value Not Supported</small>    \n        \n                        </div>\n\n                        <div class=\"form-group\">\n                          <label >Image</label>\n                          <input type=\"text\" name=\"c_img\" [(ngModel)]=\"courseItem.image\" #cimg='ngModel' class=\"form-control\"  required>\n                          <small class=\"text-danger\" [class.d-none]=\"cimg.valid || cimg.touched\">Empty Value Not Supported</small>    \n        \n                        </div>\n\n                        <div class=\"form-group\">\n                          <label >Teacher</label>\n                          <input type=\"text\" name=\"c_prof\" [(ngModel)]=\"courseItem.professor\" #cprof='ngModel' placeholder=\"Type Teacher\" class=\"form-control\"  required>\n                          <small class=\"text-danger\" [class.d-none]=\"cprof.valid || cprof.touched\">Empty Value Not Supported</small>    \n        \n                        </div>\n\n                        <div class=\"form-group\">\n                            <label >Email</label>\n                            <input type=\"text\" name=\"c_email\" [(ngModel)]=\"courseItem.email\" #cemail='ngModel' placeholder=\"Type Registered Email\" class=\"form-control\"  required>\n                            <small class=\"text-danger\" [class.d-none]=\"cemail.valid || cemail.touched\">Empty Value Not Supported</small>    \n          \n                          </div>\n\n                          <div class=\"form-group\">\n                            <label >Course Type</label>\n                            <input type=\"text\" name=\"c_type\" [(ngModel)]=\"courseItem.type\" #ctype='ngModel' placeholder=\"Type Type Of course\" class=\"form-control\" >\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label >Course Level</label>\n                            <input type=\"text\" name=\"c_level\" [(ngModel)]=\"courseItem.level\" #clevel='ngModel' placeholder=\"Type Level Of course\" class=\"form-control\" >\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label >Start Date</label>\n                            <input type=\"text\" name=\"c_sdate\" [(ngModel)]=\"courseItem.startdate\" #csdate='ngModel' placeholder=\"Type Start Date Of course\" class=\"form-control\" >\n                          </div>\n\n                        <div class=\"form-group\">\n                            <label >Duration</label>\n                            <input type=\"text\" name=\"c_dur\" [(ngModel)]=\"courseItem.duration\" #cdur='ngModel' placeholder=\"Type Duration\" class=\"form-control\"  required>\n                            <small class=\"text-danger\" [class.d-none]=\"cdur.valid || cdur.touched\">Empty Value Not Supported</small>    \n          \n                          </div>\n\n                          <div class=\"form-group\">\n                            <label >Eligibility</label>\n                            <input type=\"text\" name=\"c_qualification\" [(ngModel)]=\"courseItem.qualification\" #cql='ngModel' placeholder=\"Type Required Qulaification\" class=\"form-control\" >\n          \n                          </div>\n\n                          <div class=\"form-group\">\n                            <label >Details</label>\n                            <input type=\"text\" name=\"c_details\" [(ngModel)]=\"courseItem.details\" #cdet='ngModel' placeholder=\"Type More Details\" class=\"form-control\" >\n          \n                          </div>\n\n                      <button type=\"submit\"  value=\"Submit\" class=\"btn btn-primary btn-block\" [disabled]=\"addcourseform.form.invalid\">Submit</button>\n          </form>\n\n          </div></div></div>\n\n   \n   \n       </div>\n   </div>\n   \n   \n\n\n","export class ProfileModel{\n    constructor(\n    public name: string,\n    public email:string,\n    public password1:string,\n    public password2:string,\n    public address:string,\n    public dob:string,\n    public mothertongue:string,\n    public languages:string,\n    public hobbies:string,\n    public education:string,\n    public number:string\n    ){}\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EnrollModel } from '../course-details/enroll.model'\nimport { ProfService } from '../prof.service';\nimport { MessageModel } from './message.model';\n\n\n@Component({\n  selector: 'app-coursetaken-requests',\n  templateUrl: './coursetaken-requests.component.html',\n  styleUrls: ['./coursetaken-requests.component.css']\n})\nexport class CoursetakenRequestsComponent implements OnInit {\n\n  messageItem = new MessageModel('','','','','');\n  requestItem = new EnrollModel('','','','','','','','');\n  requestItem1:EnrollModel[];\n  requestItem2:EnrollModel[];\n\n\n  constructor(private profService:ProfService,private router:Router) { }\n\n  ngOnInit(): void {\n\n    this.requestItem.c_id=localStorage.getItem(\"detailsCourseId\");\n    this.requestItem.p_email=localStorage.getItem(\"profId\");\n    this.profService.getRequestDetails(this.requestItem)\n    .subscribe((data)=>\n    { \n      this.requestItem1  =JSON.parse(JSON.stringify(data));\n      console.log(this.requestItem1);\n    })\n    \n    \n  }\n\n  acceptRequest(item){\n    this.profService.acceptRequest(item).subscribe(res=>{\n      console.log(this.requestItem1);\n    if(res.lessthan)\n    {\n    this.requestItem.c_id=localStorage.getItem(\"detailsCourseId\");\n    this.requestItem.p_email=localStorage.getItem(\"profId\");\n    this.profService.getRequestDetails(this.requestItem)\n    .subscribe((data)=>\n    { \n      this.requestItem1  =JSON.parse(JSON.stringify(data));\n      console.log(this.requestItem1);\n    })\n\n    }\n\n    if(res.greater){\n      alert(\"More Than 40\");\n    }\n\n    })\n\n    window.location.reload();\n\n  }\n\n  declineRequest(item){\n    this.profService.declineRequest(item._id).subscribe((data)=>{\n      console.log(data);\n\n    this.requestItem.c_id=localStorage.getItem(\"detailsCourseId\");\n    this.requestItem.p_email=localStorage.getItem(\"profId\");\n    this.profService.getRequestDetails(this.requestItem)\n    .subscribe((data)=>\n    { \n      this.requestItem1  =JSON.parse(JSON.stringify(data));\n      console.log(this.requestItem1);\n    })\n\n    })  \n  }\n\n  sendMessage(item){\n    \n    let foo = prompt('Type Message');\n    console.log(foo);\n    if(foo===null){\n      return;\n    }\n    if(foo?.trim()!=='' || foo?.trim()!==null)\n    {\n    this.messageItem.about=item.c_name;\n    this.messageItem.r_id=item.s_email;\n    this.messageItem.s_name=item.c_professor;\n    this.messageItem.s_id=item.p_email;\n    this.messageItem.message=foo;\n    console.log(this.messageItem);\n    this.profService.sendMessage(this.messageItem);\n  }\n\n  }\n\n}\n","<!-- <div class=\"container\" >\n  <p *ngIf=\"requestItem1.length == 0\">NO ITEM TO SHOW</p>\n\n<div class=\"row\" *ngFor='let item of requestItem1'>\n\n    <div class=\"col lg-4 md-4\" >\n     <table class=\"table\">\n       <tbody>\n         <tr>\n           <th>Name</th>\n           <td>{{ item.s_name.toUpperCase() }}</td>\n         </tr>\n         <tr>\n           <th>Email</th>\n           <td>{{ item.s_email }}</td>\n         </tr>\n         <tr>\n            <th>Education Qualification</th>\n            <td>{{ item.s_education }}</td>\n          </tr>\n       </tbody>\n     </table>\n   </div>\n\n   </div>\n\n   <div class=\"row\" *ngFor='let item of requestItem1'>\n    <div class=\"col lg-4 md-4\" >\n   <button mat-raised-button color=\"primary\" (click)=\"acceptRequest(item)\" >Accept</button>\n   <button mat-raised-button color=\"warn\" (click)=\"declineRequest(item)\">Decline</button>\n   <br>\n   <br>\n   </div>\n  </div>\n\n  </div> -->\n\n\n\n\n  <h2 mat-dialog-title>Requests</h2>\n<mat-dialog-content>\n\n    <div class=\"container\">\n\n      <p *ngIf=\"requestItem1.length == 0\">NO ITEM TO SHOW</p>\n\n      <div class=\"rows\" *ngFor='let item of requestItem1'>\n\n<div class=\"row\" >\n\n    <div class=\"col lg-4 md-4\" >\n     <table class=\"table\">\n       <tbody>\n         <tr>\n           <th>Name</th>\n           <td>{{ item.s_name.toUpperCase() }}</td>\n         </tr>\n         <tr>\n           <th>Email</th>\n           <td>{{ item.s_email }}</td>\n         </tr>\n         <tr>\n            <th>Education Qualification</th>\n            <td>{{ item.s_education }}</td>\n          </tr>\n       </tbody>\n     </table>\n   </div>\n\n   </div>\n\n   <div class=\"row\" >\n    <div class=\"col lg-4 md-4\" >\n   <button mat-raised-button color=\"primary\" (click)=\"acceptRequest(item)\" ><i class=\"fa-2x far fa-check-circle\"></i></button>\n   <button mat-raised-button color=\"warn\" (click)=\"declineRequest(item)\"><i class=\"fa-2x far fa-times-circle\"></i></button>\n   <button mat-raised-button color=\"accent\" (click)=\"sendMessage(item)\">    <i class=\"fa-2x far fa-envelope message\"></i>   </button>\n   <br>\n   <br>\n   </div>\n  </div>\n\n</div>\n</div>\n\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button mat-button mat-dialog-close tabindex=\"-1\">Cancel</button>\n  </mat-dialog-actions>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CourseModel } from '../add-course/course.model'\nimport { UserService } from '../user.service';\n\n\n@Component({\n  selector: 'app-requested-courses',\n  templateUrl: './requested-courses.component.html',\n  styleUrls: ['./requested-courses.component.css']\n})\nexport class RequestedCoursesComponent implements OnInit {\n\n  courses: CourseModel[];\n\n  constructor(private userService:UserService,private router:Router) { }\n\n  ngOnInit(): void {\n\n    let userIdC=localStorage.getItem(\"userId\");\n    this.userService.getRequestedCourses(userIdC).subscribe((data)=>{\n      this.courses=JSON.parse(JSON.stringify(data));\n      console.log(this.courses);\n    })\n\n}\n\ndetailsCourse(course)\n  {\n    localStorage.setItem(\"detailsCourseId\",course._id.toString());\n      this.router.navigate(['details-course']); \n  }\n\n}\n","\n      <div class=\"container\">\n        <mat-card class=\"text-center nocard\" *ngIf=\"courses.length == 0\">No Pending Requests</mat-card>\n        <div class=\"row\" >    \n            <div class=\"col-lg-4 col-sm-7 col-md-6 my-row\" *ngFor='let course of courses'>\n\n         <mat-card class=\"example-card\">\n              <img src=\"{{course.image}}\" alt=\"\" height=\"100%\" width=\"100%\" (click)=\"detailsCourse(course)\">\n              <mat-card-content>\n                <h2 class=\"text-center\">{{course.name}}</h2>\n              </mat-card-content>\n          </mat-card>\n\n              </div>\n            </div>\n          </div>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProfService } from '../prof.service';\nimport { ProfProfileModel } from '../profile-prof/profprofile.model';\n\n\n@Component({\n  selector: 'app-edit-prof',\n  templateUrl: './edit-prof.component.html',\n  styleUrls: ['./edit-prof.component.css']\n})\nexport class EditProfComponent implements OnInit {\n\n  profItem = new ProfProfileModel('','','','','','','','','','','');\n\n  constructor(private profService:ProfService,private router:Router) { }\n\n  ngOnInit(): void {\n    let profId=localStorage.getItem(\"editProfileId\");\n    this.profService.getProfProfileOne(profId)\n    .subscribe((data)=>\n    {\n      this.profItem = JSON.parse(JSON.stringify(data));\n      console.log(this.profItem);\n    })\n  }\n\n  editProfile()\n  {\n    this.profService.editProfProfile(this.profItem);\n    alert(\"success\");\n    this.router.navigate(['/profile-prof']);\n  }\n\n}\n","\n<div class='card-header' style=\"width: 100\">\n\n    <div class='card' style=\"width: 100%\">\n   \n       <div class='card-header' style=\"width: 100\">\n           <h3>Update Profile </h3>\n       </div>\n       <div class='card-body' style=\"width: 100\">\n           <div class=\"row justify-content-center\" >    \n               \n\n            <div class=\"col-md-8\"> \n        \n                <div class=\"panel\">\n                  <div class=\"panel-body\">\n                    \n                    \n               \n                    <!--/stories-->\n                    <form (ngSubmit)=\"editProfile()\" #addprofileform=\"ngForm\">\n                      <div class=\"form-group\">\n                          <label >Full Name</label>\n                          <input type=\"text\" name=\"p_name\" [(ngModel)]=\"profItem.name\" #pname='ngModel' placeholder=\"Type Full Name\" class=\"form-control\"  required>\n                          <small class=\"text-danger\" [class.d-none]=\"pname.valid || pname.touched\">Empty Value Not Supported</small>    \n        \n                        </div>\n\n                        <div class=\"form-group\">\n                          <label >Email</label>\n                          <input type=\"text\" name=\"p_email\" [(ngModel)]=\"profItem.email\" #pemail='ngModel' placeholder=\"Type Name Of Director\" class=\"form-control\"  required>\n                          <small class=\"text-danger\" [class.d-none]=\"pemail.valid || pemail.touched\">Empty Value Not Supported</small>    \n        \n                        </div>\n\n                        <div class=\"form-group\">\n                          <label >Address</label>\n                          <input type=\"text\" name=\"p_adds\" [(ngModel)]=\"profItem.address\" #padds='ngModel' placeholder=\"Type Address\" class=\"form-control\" >\n        \n                        </div>\n\n                        <div class=\"form-group\">\n                          <label >Phone Number</label>\n                          <input type=\"string\" name=\"p_number\" [(ngModel)]=\"profItem.number\" #pnumber='ngModel' placeholder=\"Type Number\" class=\"form-control\" >\n        \n                        </div>\n\n                        <div class=\"form-group\">\n                            <label >D.O.B</label>\n                            <input type=\"text\" name=\"p_dob\" [(ngModel)]=\"profItem.dob\" #pdob='ngModel' placeholder=\"Type DOB\" class=\"form-control\"  >\n          \n                          </div>\n\n                          <div class=\"form-group\">\n                            <label >Mother Tongue</label>\n                            <input type=\"text\" name=\"p_mtng\" [(ngModel)]=\"profItem.mothertongue\" #pmtng='ngModel' placeholder=\"Type Mother tongue\" class=\"form-control\">\n          \n                          </div>\n\n\n                          <div class=\"form-group\">\n                            <label >Other Languages</label>\n                            <input type=\"text\" name=\"p_lang\" [(ngModel)]=\"profItem.languages\" #plang='ngModel' class=\"form-control\" >   \n          \n                          </div>\n\n                          <div class=\"form-group\">\n                            <label >Experiences</label>\n                            <input type=\"text\" name=\"p_hb\" [(ngModel)]=\"profItem.hobbies\" #thb='ngModel' placeholder=\"Type Previous Experiences.\" class=\"form-control\">\n          \n                          </div>\n\n                          <div class=\"form-group\">\n                            <label >Education</label>\n                            <input type=\"text\" name=\"p_edc\" [(ngModel)]=\"profItem.education\" #tedc='ngModel'  class=\"form-control\" >   \n          \n                          </div>\n\n                    \n\n                      <button type=\"submit\"  value=\"Submit\" class=\"btn btn-primary btn-block\" [disabled]=\"addprofileform.form.invalid\">Submit</button>\n          </form>\n\n          </div></div></div>\n\n   \n   \n       </div>\n   </div>\n   \n   \n\n\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { CourseModel } from '../add-course/course.model';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  courses:CourseModel[];\n\n  constructor(private userService:UserService,private router:Router,public auth:AuthService) { }\n\n  ngOnInit(): void {\n    \n    this.userService.getAllCourses().subscribe((data)=>{\n      this.courses=JSON.parse(JSON.stringify(data));\n      console.log(this.courses);\n    })\n  }\n\n  detailsCourse(course)\n  {\n    localStorage.setItem(\"detailsCourseId\",course._id.toString());\n      this.router.navigate(['details-course']); \n  }\n\n\n}\n","        <section id=\"banner\" *ngIf=\"! auth.logIn()\">\n          <div class=\"container-fluid\">\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <p class=\"promo-title\">SKILL PLUS</p>\n                <p>\n                  We are providing your course to success.Build skills with courses, certificates online.Take the next step toward your personal and professional goals with SkillPlus.Earn industry-recognized credentials.Master skills with in-depth learning and understanding with proper mentoring.</p>\n                 <br>\n                <div class=\"header-buttons\">\n                   <a href=\"/login-user\">Student</a>\n                   <a href=\"/login-prof\">Professor</a>\n                 </div>\n              </div>\n\n              <div class=\"col-md-6 text-center\">\n               <img src=\"assets/png/1.png.svg\" class=\"img-fluid\" fxHide.sm fxHide.xs>\n              </div>\n            </div>\n\n          </div>\n         </section>\n         <img src=\"assets/png/wave5.png\" class=\"bottom-img\" *ngIf=\"! auth.logIn()\">\n\n         <div class=\"container\" *ngIf=\"auth.logIn() && courses.length == 0\">\n          <mat-card class=\"text-center nocard\" *ngIf=\"auth.logIn() && courses.length == 0\">Not Added Any courses</mat-card>\n         </div>\n\n<section id=\"courses\">\n  <div class=\"container\">\n    <div class=\"text-center\" *ngIf=\"! auth.logIn()\">\n          <h1 class=\"title\" *ngIf=\"courses.length != 0\">COURSES OFFERED</h1>\n        </div>\n      <div class=\"row\" >    \n          <div class=\"col-lg-4 col-sm-7 col-md-6 my-row\" *ngFor='let course of courses'> \n\n          <!-- <div class=\"image\">\n             <img src=\"{{course.image}}\" alt=\"\" height=\"200px\" width=\"300px\" (click)=\"detailsCourse(course)\">\n             <div class=\"video-bottom-section\">\n              <div class=\"video-details\">\n                <h2  class=\"video-title\">{{course.name}}</h2>\n              </div>\n            </div>\n          </div> -->\n\n          <mat-card class=\"example-card\">\n            <img src=\"{{course.image}}\" alt=\"\" height=\"100%\" width=\"100%\" (click)=\"detailsCourse(course)\">\n              <mat-card-content>\n                <h2 class=\"text-center\">{{course.name}}</h2>\n              </mat-card-content>\n          </mat-card>\n        \n        </div>\n      </div>\n     \n  </div>\n</section>\n\n  <section class=\"section3\" *ngIf=\"! auth.logIn()\" id=\"chose\">\n    <div class=\"container\">\n      <div class=\"text-center\">\n        <h1 class=\"title\">WHY US?</h1>\n      </div>\n      <div class=\"row\">\n\n        <div class=\"col-lg-4 col-md-4 col-12 section3con\">\n          <i class=\"fa-3x fas fa-desktop\"></i>\n          <h2>ONLINE FREE COURSES</h2>\n          <p>We are providing number of courses free of charge for registered students.Which will help you to enrich your skills in an efficient way.</p> \n        </div>\n\n        <div class=\"col-lg-4 col-md-4 col-12 section3con\">\n          <i class=\"fa-3x fas fa-graduation-cap\"></i>\n          <h2>CERTIFICATE</h2>\n          <p>Providing certificates after the completion of courses with the monitoring of teachers.Which are definitly going to strengthen your resume.</p> \n        </div>\n\n        <div class=\"col-lg-4 col-md-4 col-12 section3con\">\n          <i class=\"fa-3x fas fa-coins\"></i>\n          <h2>Affordable Fee Structure</h2>\n          <p>We are providing the best courses with affordable fee structure.One-stop shop for Students, Unemployed and Working professionals.</p> \n        </div>\n\n      </div>\n    </div>\n  </section>\n          <img src=\"assets/png/wave6.png\" class=\"footer-img\" *ngIf=\"!auth.logIn()\">\n\n\n","import { HttpInterceptor } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport{ AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private injector:Injector) { }\n\n  intercept(req,nxt)\n  {\n    let authService=this.injector.get(AuthService)\n    let tokenizedReq=req.clone(\n      {\n        setHeaders:{\n          Authorization:`Bearer ${authService.getProfToken()}`\n        }\n      }\n    )\n    return nxt.handle(tokenizedReq)\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CourseModel } from '../add-course/course.model'\nimport { EnrollModel } from '../course-details/enroll.model';\nimport { UserService } from '../user.service';\n\n\n@Component({\n  selector: 'app-courses',\n  templateUrl: './courses.component.html',\n  styleUrls: ['./courses.component.css']\n})\nexport class CoursesComponent implements OnInit {\n\n  enrollItem:EnrollModel[];\n  courses: CourseModel[];\n\n  constructor(private userService:UserService,private router:Router) { }\n\n  ngOnInit(): void {\n    let userIdC=localStorage.getItem(\"userId\");\n    this.userService.getEnrolledCourses(userIdC).subscribe((data)=>{\n      this.courses=JSON.parse(JSON.stringify(data));\n      console.log(this.courses);\n      console.log(this.courses[0]);\n    })\n\n  }\n\n  detailsCoursetaken(course)\n  {\n    localStorage.setItem(\"detailsCourseId\",course._id.toString());\n      this.router.navigate(['details-coursetaken']); \n  }\n\n}\n","\n      <div class=\"container\">\n        <mat-card class=\"text-center nocard\" *ngIf=\"courses.length == 0\">Not Enrollled To Any courses</mat-card>\n        <div class=\"row\" >    \n            <div class=\"col-lg-4 col-sm-7 col-md-6 my-row\" *ngFor='let course of courses'>\n\n              <mat-card class=\"example-card\">\n            <img src=\"{{course.image}}\" alt=\"\" height=\"100%\" width=\"100%\" (click)=\"detailsCoursetaken(course)\">\n              <mat-card-content>\n                <h2 class=\"text-center\">{{course.name}}</h2>\n              </mat-card-content>\n          </mat-card>\n\n           \n                \n\n              </div>\n            </div>\n          </div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { ProfileModel } from './profile.model';\n\n@Component({\n  selector: 'app-profile-user',\n  templateUrl: './profile-user.component.html',\n  styleUrls: ['./profile-user.component.css']\n})\nexport class ProfileUserComponent implements OnInit {\n\n  profileItem:ProfileModel[]=[] ;\n\n  constructor(private userService:UserService,private router:Router) { }\n\n  ngOnInit(): void {\n    let userId=localStorage.getItem(\"userId\");\n    this.userService.getUserProfile(userId)\n    .subscribe((data)=>\n    {\n      this.profileItem = JSON.parse(JSON.stringify(data));\n    })\n\n  }\n\n  editProfile(profile)\n  {\n    localStorage.setItem(\"editProfileId\",profile._id.toString());\n    this.router.navigate(['edit-user']);\n  }\n\n}\n","<!-- <div class=\"container\" *ngFor='let profile of profileItem'>\n    <div class=\"row\" >\n        <mat-icon color=\"warn\" (click)=\"editProfile(profile)\">edit</mat-icon>\n    </div>\n<div class=\"row\">\n    <div class=\"col lg-4 md-4\" >\n     <table class=\"table\">\n       <tbody>\n         <tr>\n           <th>Full Name</th>\n           <td>{{ profile.name.toUpperCase() }}</td>\n         </tr>\n         <tr>\n           <th>Address</th>\n           <td>{{ profile.address }}</td>\n         </tr>\n         <tr>\n           <th>Email Address</th>\n           <td>{{ profile.email }}</td>\n         </tr>\n         <tr>\n           <th>D.O.B</th>\n           <td>{{ profile.dob }}</td>\n         </tr>\n       </tbody>\n     </table>\n   </div>\n\n   <div class=\"col lg-4 md-4\" >\n     <table class=\"table\">\n       <tbody>\n         <tr>\n           <th>Mother Tongue</th>\n           <td>{{ profile.mothertongue }}</td>\n         </tr>\n         <tr>\n           <th>Other Languages</th>\n           <td>{{ profile.languages }}</td>\n         </tr>\n         <tr>\n           <th>Highest Education Qualification</th>\n           <td>{{ profile.education }}</td>\n         </tr>\n         <tr>\n           <th>Hobbies</th>\n           <td>{{ profile.hobbies }}</td>\n         </tr>\n       </tbody>\n     </table>\n   </div>\n\n   </div>\n</div> -->\n\n\n\n\n<html>\n<body class=\"bg-light\">\n\t<div class=\"container\" *ngFor='let profile of profileItem'>\n\n     \t<div class=\"row d-flex justify-content-center\">\n            <div class=\"col-md-10 mt-5 pt-5\">\n             \t\n              <div class=\"row z-depth-3\">\n                 \t\n                <div class=\"col-sm-4 info rounded-left\">\n        \t\t        <div class=\"card-block text-center text-white\">\n                \t\t    <i class=\"fas fa-user-tie fa-7x mt-5\"></i>\n                    \t\t<h2 class=\"font-weight-bold mt-4\">{{ profile.name.toUpperCase() }}</h2>\n                    \t\t<p>{{ profile.dob }}</p> \n                        <i class=\"fa-2x far fa-edit edit\" (click)=\"editProfile(profile)\"></i>\n                \t\t</div>\n            \t\t</div>\n            \t\t\n                <div class=\"col-sm-8 bg-white rounded-right\">\n                    \t<h3 class=\"mt-3 text-center\">Information</h3>\n                    \t<hr class=\"bg-primary mt-0 w-25\">\n                   \t\t<div class=\"row\">\n                        \t<div class=\"col-sm-6\">\n                            \t<p class=\"font-weight-bold\">Email:</p>\n                           \t\t<h6 class=\" text-muted\">{{ profile.email }}</h6>\n                        \t</div>\n                        \t<div class=\"col-sm-6\">\n                            \t<p class=\"font-weight-bold\">Phone:</p>\n                           \t\t<h6 class=\"text-muted\">{{ profile.number }}</h6>\n                        \t</div>\n                    \t</div>\n                       \n                      <hr class=\"ruler\">\n                   \t\t<div class=\"row\">\n                        \t<div class=\"col-sm-6\">\n                           \t\t<p class=\"font-weight-bold\">Highest Graduation:</p>\n                          \t  \t<h6 class=\"text-muted\">{{profile.education}}</h6>\n                        \t</div>\n                        \t<div class=\"col-sm-6\">\n                            \t<p class=\"font-weight-bold\">Hobbies:</p>\n                            \t<h6 class=\"text-muted\">{{profile.hobbies}}</h6>\n                        \t</div>\n                    \t</div>\n\n                    \t\t<hr class=\"ruler\">\n                   \t\t<div class=\"row\">\n                        \t<div class=\"col-sm-6\">\n                           \t\t<p class=\"font-weight-bold\">Mother Tongue:</p>\n                          \t  \t<h6 class=\"text-muted\">{{profile.mothertongue}}</h6>\n                        \t</div>\n                        \t<div class=\"col-sm-6\">\n                            \t<p class=\"font-weight-bold\">Other Languages:</p>\n                            \t<h6 class=\"text-muted\">{{profile.languages}}</h6>\n                        \t</div>\n                    \t</div>\n                      <p class=\"mt-3 font-weight-bold\">Address:</p>\n                \t   \t<hr class=\"ruler\">\n                \t    <ul class=\"d-flex justify-content-center mt-4\">\n            \t        \t<h6 class=\"text-muted\">{{profile.address}}</h6>\n\t               \t\t</ul>  \n              \t\t</div>\n             \t</div>\n            </div>\n        </div>\n\t</div>\n</body>\n</html>","export class EnrollModel{\n    constructor(\n    public c_name: string,\n    public c_professor:string,\n    public p_email:string|null,\n    public s_name:string,\n    public s_email:string,\n    public s_education:string,\n    public status:string,\n    public c_id:string|null\n    ){}\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProfileModel } from '../profile-user/profile.model';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n\n  profileItem = new ProfileModel('','','','','','','','','','','');\n\n  constructor(private userService:UserService,private router:Router) { }\n\n  ngOnInit(): void {\n\n    let userId=localStorage.getItem(\"editProfileId\");\n    this.userService.getUserProfileOne(userId)\n    .subscribe((data)=>\n    {\n      this.profileItem = JSON.parse(JSON.stringify(data));\n      console.log(this.profileItem);\n    })\n\n  }\n\n  editProfile()\n  {\n    this.userService.editUserProfile(this.profileItem);\n    alert(\"success\");\n    this.router.navigate(['/profile-user']);\n  }\n\n}\n","\n<div class='card-header' style=\"width: 100\">\n\n    <div class='card' style=\"width: 100%\">\n   \n       <div class='card-header' style=\"width: 100\">\n           <h3>Update Profile </h3>\n       </div>\n       <div class='card-body' style=\"width: 100\">\n           <div class=\"row justify-content-center\" >    \n               \n\n            <div class=\"col-md-8\"> \n        \n                <div class=\"panel\">\n                  <div class=\"panel-body\">\n                    \n                    \n               \n                    <!--/stories-->\n                    <form (ngSubmit)=\"editProfile()\" #addprofileform=\"ngForm\">\n                      <div class=\"form-group\">\n                          <label >Full Name</label>\n                          <input type=\"text\" name=\"p_name\" [(ngModel)]=\"profileItem.name\" #pname='ngModel' placeholder=\"Type Full Name\" class=\"form-control\"  required>\n                          <small class=\"text-danger\" [class.d-none]=\"pname.valid || pname.touched\">Empty Value Not Supported</small>    \n        \n                        </div>\n\n                        <div class=\"form-group\">\n                          <label >Email</label>\n                          <input type=\"text\" name=\"p_email\" [(ngModel)]=\"profileItem.email\" #pemail='ngModel' placeholder=\"Type Name Of Director\" class=\"form-control\"  required>\n                          <small class=\"text-danger\" [class.d-none]=\"pemail.valid || pemail.touched\">Empty Value Not Supported</small>    \n        \n                        </div>\n\n                        <div class=\"form-group\">\n                          <label >Phone Number</label>\n                          <input type=\"string\" name=\"p_number\" [(ngModel)]=\"profileItem.number\" #pnumber='ngModel' placeholder=\"Type Number\" class=\"form-control\" >\n        \n                        </div>\n\n                        <div class=\"form-group\">\n                          <label >Address</label>\n                          <input type=\"text\" name=\"p_adds\" [(ngModel)]=\"profileItem.address\" #padds='ngModel' placeholder=\"Type Address\" class=\"form-control\" >\n        \n                        </div>\n\n                        <div class=\"form-group\">\n                            <label >D.O.B</label>\n                            <input type=\"text\" name=\"p_dob\" [(ngModel)]=\"profileItem.dob\" #pdob='ngModel' placeholder=\"Type DOB\" class=\"form-control\"  >\n          \n                          </div>\n\n                          <div class=\"form-group\">\n                            <label >Mother Tongue</label>\n                            <input type=\"text\" name=\"p_mtng\" [(ngModel)]=\"profileItem.mothertongue\" #pmtng='ngModel' placeholder=\"Type Mother tongue\" class=\"form-control\">\n          \n                          </div>\n\n\n                          <div class=\"form-group\">\n                            <label >Other Languages</label>\n                            <input type=\"text\" name=\"p_lang\" [(ngModel)]=\"profileItem.languages\" #plang='ngModel' class=\"form-control\" >   \n          \n                          </div>\n\n                          <div class=\"form-group\">\n                            <label >Hobbies</label>\n                            <input type=\"text\" name=\"p_hb\" [(ngModel)]=\"profileItem.hobbies\" #thb='ngModel'  class=\"form-control\">\n          \n                          </div>\n\n                          <div class=\"form-group\">\n                            <label >Education</label>\n                            <input type=\"text\" name=\"p_edc\" [(ngModel)]=\"profileItem.education\" #tedc='ngModel'  class=\"form-control\" >   \n          \n                          </div>\n\n                    \n\n                      <button type=\"submit\"  value=\"Submit\" class=\"btn btn-primary btn-block\" [disabled]=\"addprofileform.form.invalid\">Submit</button>\n          </form>\n\n          </div></div></div>\n\n   \n   \n       </div>\n   </div>\n   \n   \n\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { MessageModel } from '../coursetaken-requests/message.model';\n\n\n@Component({\n  selector: 'app-message-notification',\n  templateUrl: './message-notification.component.html',\n  styleUrls: ['./message-notification.component.css']\n})\nexport class MessageNotificationComponent implements OnInit {\n\n  messageItem:MessageModel[];\n\n\n  constructor(private userService:UserService) { }\n\n  ngOnInit(): void {\n\n    let user=localStorage.getItem(\"userId\");\n    this.userService.getMessage(user)\n    .subscribe((data)=>\n    { \n      this.messageItem  =JSON.parse(JSON.stringify(data));\n      console.log(this.messageItem);\n    })\n\n  }\n\n}\n","\n  <h2 mat-dialog-title>Replays</h2>\n  <mat-dialog-content>\n\n    <p *ngIf=\"messageItem.length == 0\">NO ITEM TO SHOW</p>\n  \n      <!-- <div class=\"container\">\n  \n        <p *ngIf=\"messageItem.length == 0\">NO ITEM TO SHOW</p>\n  \n        <div class=\"rows\" *ngFor='let item of messageItem'>\n  \n  <div class=\"row\" >\n  \n      <div class=\"col lg-4 md-4\" >\n       <table class=\"table\">\n         <tbody>\n           <tr>\n             <th>Course</th>\n             <td>{{ item.about.toUpperCase() }}</td>\n           </tr>\n           <tr>\n             <th>Message</th>\n             <td>{{ item.message }}</td>\n           </tr>\n         </tbody>\n       </table>\n     </div>\n\n     <div class=\"col lg-4 md-4\" >\n        <table class=\"table\">\n          <tbody>\n            <tr>\n              <th>By</th>\n              <td>{{ item.s_name }}</td>\n            </tr>\n            <tr>\n              <th>Email</th>\n              <td>{{ item.s_id }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n  \n     </div> -->\n\n<!--      \n  </div>\n</div> -->\n\n\n     <div class=\"container\">\n       <div class=\"row\" *ngFor='let item of messageItem'>\n         <div class=\"col\">\n\n     <mat-card class=\"example-card\" >\n      <mat-card-header>\n        <mat-card-title>'{{ item.message }}'</mat-card-title>\n        <mat-card-subtitle>>{{ item.about.toUpperCase() }}</mat-card-subtitle>\n        <mat-card-subtitle>>{{ item.s_name }}</mat-card-subtitle>\n        <mat-card-subtitle>>{{ item.s_id }}</mat-card-subtitle>\n      </mat-card-header>\n      <!-- <mat-card-content>\n        <p>\n        </p>\n      </mat-card-content> -->\n      <!-- <mat-card-actions>\n        <button mat-button>LIKE</button>\n        <button mat-button>SHARE</button>\n      </mat-card-actions> -->\n    </mat-card>\n\n  </div>\n</div>\n</div>\n  \n  \n  \n  </mat-dialog-content>\n  <mat-dialog-actions>\n      <button mat-button mat-dialog-close tabindex=\"-1\">Cancel</button>\n    </mat-dialog-actions>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ProfService } from '../prof.service';\nimport { CourseModel } from '../add-course/course.model'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-course-taken',\n  templateUrl: './course-taken.component.html',\n  styleUrls: ['./course-taken.component.css']\n})\nexport class CourseTakenComponent implements OnInit {\n\n  courses: CourseModel[];\n\n  constructor(private profService:ProfService,private router:Router) { }\n\n  ngOnInit(): void {\n   let profIdC=localStorage.getItem(\"profId\");\n    this.profService.getCourses(profIdC).subscribe((data)=>{\n      this.courses=JSON.parse(JSON.stringify(data));\n    })\n  }\n\n  detailsCoursetaken(course)\n  {\n    localStorage.setItem(\"detailsCourseId\",course._id.toString());\n      this.router.navigate(['details-coursetaken']); \n  }\n\n  deleteCourse(course){\n    alert(\"Delete\");\n    console.log(course._id);\n    this.profService.deleteCourse(course._id);\n     \n    let profIdC=localStorage.getItem(\"profId\");\n    this.profService.getCourses(profIdC).subscribe((data)=>{\n      this.courses=JSON.parse(JSON.stringify(data));\n    })\n    \n  }\n\n}\n","\n      <div class=\"container\">\n        <mat-card class=\"text-center nocard\" *ngIf=\"courses.length == 0\">Not Added Any courses</mat-card>\n        <div class=\"row\" >    \n            <div class=\"col-lg-4 col-sm-7 col-md-6 my-row\" *ngFor='let course of courses'>\n\n              <mat-card class=\"example-card\">\n                <img src=\"{{course.image}}\" alt=\"\" height=\"100%\" width=\"100%\" (click)=\"detailsCoursetaken(course)\">\n                  <mat-card-content>\n                    <h2 class=\"text-center\">{{course.name}}</h2>\n                  </mat-card-content>\n                  <mat-card-actions>\n                    <button color=\"warn\" mat-button (click)=\"deleteCourse(course)\">DELETE</button>\n                    <!-- <mat-icon >delete</mat-icon> -->\n                  </mat-card-actions>\n              </mat-card>\n\n                \n\n              </div>\n            </div>\n          </div>\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Course-Management';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-signup-user',\n  templateUrl: './signup-user.component.html',\n  styleUrls: ['./signup-user.component.css']\n})\nexport class SignupUserComponent implements OnInit {\n\n  user={\n    email1:'',\n    name1:'',\n  password1:'',\n  password2:''\n  }\n\n  constructor(private userServices:UserService,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  signupUser()\n  {\n    this.userServices.signupUser(this.user)\n    .subscribe(\n      res=>{\n        if(res.msg1){\n          alert(\"success\");\n          this.router.navigate(['/login-user'])\n        }\n        if(res.msg2)\n        {\n          alert(\"Wrong:Try Again!!\");\n        }\n  \n      }\n    )\n  }\n\n}\n","<div class='card-header' style=\"width: 100\">\n\n    <div class='card' style=\"width: 100%\">\n   \n\n       <div class='card-body' style=\"width: 100\">\n           <div class=\"row justify-content-center\" >    \n               \n\n            <div class=\"col-md-8\"> \n        \n                <div class=\"panel\">\n                  <div class=\"panel-body\">\n                    \n                    \n               \n    \n                    <form (ngSubmit)=\"signupUser()\" #signupuserform=\"ngForm\" fxLayoutAlign=\"stretch\" fxLayout=\"column\">\n                      <mat-form-field>\n                          \n                          <input matInput type=\"text\" name=\"name1\" [(ngModel)]=\"user.name1\" #name1='ngModel' placeholder=\"Name\"   required>\n        \n                        </mat-form-field>\n\n                        <mat-form-field>\n                    \n                            <input matInput type=\"email\" name=\"email1\" placeholder=\"Email\"   #email1='ngModel' pattern=\"^[a-z0-9.%+]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" [class.is-invalid]=\"email1.invalid && email1.touched\" [(ngModel)]=\"user.email1\" required>\n                        </mat-form-field>\n                  \n                \n                        \n                    \n                            <mat-form-field>\n                            <input matInput type=\"password\" name=\"password1\" placeholder=\"Password\"  #pass1='ngModel' class=\"form-control\" #password1='ngModel' [(ngModel)]=\"user.password1\" minlength=\"8\" required>\n                        </mat-form-field>\n                        \n                        <mat-form-field>\n        \n                            <input matInput type=\"password\" name=\"password2\" placeholder=\"Re-Enter Password\" #pass2='ngModel'  class=\"form-control\" [(ngModel)]=\"user.password2\" #password2='ngModel' pattern=\"{{user.password1}}\" required >\n                        </mat-form-field>\n\n                      <button type=\"submit\"  value=\"Submit\" class=\"btn btn-primary btn-block\" [disabled]=\"signupuserform.form.invalid\">Submit</button>\n          </form>\n\n          </div></div></div>\n\n   \n   \n       </div>\n   </div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfService {\n\n  signupProf(user)\n  {\n    return this.http.post<any>(\"http://localhost:3000/signup-prof\",user)\n  }\n  loginProf(user)\n  {\n  return this.http.post<any>(\"http://localhost:3000/login-prof\",user);\n  }\n\n  getProfProfile(id){\n    return this.http.get(\"http://localhost:3000/prof-profile/\"+id);\n  }\n  getProfProfileOne(id){\n    console.log(id);\n    return this.http.get(\"http://localhost:3000/prof-profileone/\"+id);\n  }\n\n  editProfProfile(profile){\n    \n    return this.http.put(\"http://localhost:3000/edit-prof\",profile)\n    .subscribe(data=>{\n      console.log(data)\n    })\n\n  }\n\n  addCourse(course){\n    return this.http.post(\"http://localhost:3000/course-add\",course)\n    .subscribe(data=> { console.log(data)} )\n  }\n\n  getCourses(id){\n    return this.http.get(\"http://localhost:3000/courses-taken/\"+id)\n  }\n\n  getRequestDetails(item){\n    return this.http.post(\"http://localhost:3000/get-request\",item);\n  }\n\n  acceptRequest(item){\n    return this.http.post<any>(\"http://localhost:3000/accept-request/\",item);\n  }\n\n  declineRequest(id){\n    return this.http.delete(\"http://localhost:3000/decline-request/\"+id);\n  }\n\n  addNotification(item){\n    return this.http.post(\"http://localhost:3000/add-notification\",item)\n    .subscribe(data=> { console.log(data)} )\n  }\n\n  getNotification(id){\n    return this.http.get(\"http://localhost:3000/get-notification/\"+id)\n  }\n\n  getCourseDetails(id){\n    return this.http.get(\"http://localhost:3000/course-details-prof/\"+id);\n  }\n\n  editCourse(course){\n    return this.http.put(\"http://localhost:3000/edit-course\",course)\n    .subscribe(data=>{\n      console.log(data)\n    })\n\n  }\n\n  sendMessage(item){\n    return this.http.post(\"http://localhost:3000/send-message\",item)\n    .subscribe(data=> { console.log(data)} )\n  }\n\n  enrollNumber(id){\n    return this.http.get(\"http://localhost:3000/enroll-number/\"+id)\n  }\n\n  deleteCourse(id){\n    return this.http.get(\"http://localhost:3000/delete-course/\"+id)\n    .subscribe(data=> { console.log(data)} )\n  }\n\n  constructor(private http:HttpClient) { }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { HeaderComponent } from './header/header.component';\nimport { HomeComponent } from './home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginUserComponent } from './login-user/login-user.component';\nimport { SignupUserComponent } from './signup-user/signup-user.component';\nimport { SignupProfComponent } from './signup-prof/signup-prof.component';\nimport { LoginProfComponent } from './login-prof/login-prof.component';\nimport { ProfileUserComponent } from './profile-user/profile-user.component';\nimport { ProfileProfComponent } from './profile-prof/profile-prof.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { EditProfComponent } from './edit-prof/edit-prof.component';\nimport { AuthService } from './auth.service';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { AddCourseComponent } from './add-course/add-course.component';\nimport { CourseTakenComponent } from './course-taken/course-taken.component';\nimport { CoursesComponent } from './courses/courses.component';\nimport { CourseDetailsComponent } from './course-details/course-details.component';\nimport { CoursetakenDetailsComponent } from './coursetaken-details/coursetaken-details.component';\nimport { CoursetakenRequestsComponent } from './coursetaken-requests/coursetaken-requests.component';\nimport { CourseNotificationComponent } from './course-notification/course-notification.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { EditCourseComponent } from './edit-course/edit-course.component';\nimport { RequestedCoursesComponent } from './requested-courses/requested-courses.component';\nimport { MessageNotificationComponent } from './message-notification/message-notification.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HomeComponent,\n    LoginUserComponent,\n    SignupUserComponent,\n    SignupProfComponent,\n    LoginProfComponent,\n    ProfileUserComponent,\n    ProfileProfComponent,\n    EditUserComponent,\n    EditProfComponent,\n    AddCourseComponent,\n    CourseTakenComponent,\n    CoursesComponent,\n    CourseDetailsComponent,\n    CoursetakenDetailsComponent,\n    CoursetakenRequestsComponent,\n    CourseNotificationComponent,\n    FooterComponent,\n    EditCourseComponent,\n    RequestedCoursesComponent,\n    MessageNotificationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [AuthService,\n    {\n      provide:HTTP_INTERCEPTORS,\n      useClass:TokenInterceptorService,\n      multi:true\n    }],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n\nloggedProfIn()\n{\n  return !!localStorage.getItem('tokenProf')\n}\ncourseProf(id){\n\n  return !!(localStorage.getItem('profId') == id)\n}\nloggedUserIn()\n{\n  return !!localStorage.getItem('tokenUser')\n}\nlogIn(){\n  return !!(localStorage.getItem('tokenUser') || localStorage.getItem('tokenProf'))\n}\ngetUserToken()\n  {\n    return localStorage.getItem('tokenUser')\n  }\ngetProfToken()\n  {\n    return localStorage.getItem('tokenProf')\n  }  \n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-login-user',\n  templateUrl: './login-user.component.html',\n  styleUrls: ['./login-user.component.css']\n})\nexport class LoginUserComponent implements OnInit {\n\n  constructor(private userServices:UserService,private router:Router) { }\n\n  user={\n    username:'',\n    password:''\n    }\n\n    user1={\n      email1:'',\n      name1:'',\n    password1:'',\n    password2:''\n    }\n\n  ngOnInit(): void {\n  }\n\n  loginUser(){\n\n    this.userServices.loginUser(this.user)\n  .subscribe(\n    res=>{\n    \n      if(res.tokenUser){\n        localStorage.setItem('tokenUser',res.tokenUser)\n        localStorage.setItem('userId',this.user.username)\n        alert(\"success\");\n        this.router.navigate(['/'])\n        }\n      if(res.msg)\n      {\n        alert(\"Wrong:Try Again!!\");\n        this.user.username='';\n        this.user.password='';\n      }\n    }\n  )\n\n  }\n\n\n  signupUser()\n  {\n    this.userServices.signupUser(this.user1)\n    .subscribe(\n      res=>{\n        if(res.msg1){\n          alert(\"success\");\n          this.router.navigate(['/login-user'])\n        }\n        if(res.msg2)\n        {\n          alert(\"Wrong:Try Again!!\");\n          this.user1.email1='';\n          this.user1.name1='';\n          this.user1.password1='';\n          this.user1.password2='';\n        }\n  \n      }\n    )\n  }\n\n\n}\n","<!-- <form   (ngSubmit)=\"loginUser()\" #userlogin=\"ngForm\" fxLayoutAlign=\"stretch\" fxLayout=\"column\">\n    <mat-form-field>\n      <input matInput type=\"email\" name=\"username\"  placeholder=\"Email\"  #email='ngModel' pattern=\"^[a-z0-9.%+]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" [class.is-invalid]=\"email.invalid && email.touched\" [(ngModel)]=\"user.username\" required >      \n    </mat-form-field>\n\n    <mat-form-field>\n      \n      <input  matInput placeholder=\"Password\" type=\"password\" name=\"password\" #pass='ngModel'  [(ngModel)]=\"user.password\" minlength=\"8\" required>\n    </mat-form-field>\n    <button mat-raised-button type=\"submit\" color=\"primary\"   [disabled]=\"userlogin.form.invalid\" >Submit</button>   \n</form> -->\n\n\n\n<img src=\"assets/png/wave5.png\" class=\"bottom-img\">\n<div class=\"login-page\">\n  <mat-card class=\"mat-elevation-z12\">\n\n    <mat-card-title style=\"text-align:center;\">Student</mat-card-title>\n    <mat-tab-group mat-stretch-tabs class=\"example-stretched-tabs\">\n      <mat-tab label=\"Sign In\">\n          <mat-card-content>\n              \n                \n              \n\n            <form   (ngSubmit)=\"loginUser()\" #userlogin=\"ngForm\" fxLayoutAlign=\"stretch\" fxLayout=\"column\">\n              <mat-form-field>\n                <input matInput type=\"email\" name=\"username\"  placeholder=\"Email\"  #email='ngModel' pattern=\"^[a-z0-9.%+]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" [class.is-invalid]=\"email.invalid && email.touched\" [(ngModel)]=\"user.username\" required >      \n                <mat-icon matSuffix>email</mat-icon>\n              </mat-form-field>\n          \n              <mat-form-field>\n                \n                <input  matInput placeholder=\"Password\" type=\"password\" name=\"password\" #pass='ngModel'  [(ngModel)]=\"user.password\" minlength=\"8\" required>\n                <mat-icon matSuffix>lock</mat-icon>\n              </mat-form-field>\n              <button mat-raised-button type=\"submit\" color=\"primary\"   [disabled]=\"userlogin.form.invalid\" >Submit</button>   \n          </form>\n        \n          </mat-card-content>\n      </mat-tab>\n      <mat-tab label=\"Sign Up\">\n        <mat-card-content>\n        \n\n          <form (ngSubmit)=\"signupUser()\" #signupuserform=\"ngForm\" fxLayoutAlign=\"stretch\" fxLayout=\"column\">\n            <mat-form-field>\n                \n                <input matInput type=\"text\" name=\"name1\" [(ngModel)]=\"user1.name1\" #name1='ngModel' placeholder=\"Name\"   required>\n                <mat-icon matSuffix>person</mat-icon>\n              </mat-form-field>\n\n              <mat-form-field>\n          \n                  <input matInput type=\"email\" name=\"email1\" placeholder=\"Email\"   #email1='ngModel' pattern=\"^[a-z0-9.%+]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" [class.is-invalid]=\"email1.invalid && email1.touched\" [(ngModel)]=\"user1.email1\" required>\n                  <mat-icon matSuffix>email</mat-icon>\n                </mat-form-field>\n        \n      \n              \n          \n                  <mat-form-field>\n                  <input matInput type=\"password\" name=\"password1\" placeholder=\"Password\"  #pass1='ngModel' class=\"form-control\" #password1='ngModel' [(ngModel)]=\"user1.password1\" minlength=\"8\" required>\n                  <mat-icon matSuffix>lock</mat-icon>\n                </mat-form-field>\n              \n              <mat-form-field>\n\n                  <input matInput type=\"password\" name=\"password2\" placeholder=\"Re-Enter Password\" #pass2='ngModel'  class=\"form-control\" [(ngModel)]=\"user1.password2\" #password2='ngModel' pattern=\"{{user1.password1}}\" required >\n                  <mat-icon matSuffix>lock</mat-icon>\n                </mat-form-field>\n\n            <button type=\"submit\"  value=\"Submit\" class=\"btn btn-primary btn-block\" [disabled]=\"signupuserform.form.invalid\">Submit</button>\n</form>\n\n\n        </mat-card-content>\n      </mat-tab>\n    </mat-tab-group>\n   \n  </mat-card>\n</div>\n<img src=\"assets/png/wave6.png\" class=\"footer-img\">\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProfService } from '../prof.service';\n\n@Component({\n  selector: 'app-login-prof',\n  templateUrl: './login-prof.component.html',\n  styleUrls: ['./login-prof.component.css']\n})\nexport class LoginProfComponent implements OnInit {\n\n  constructor(private profService:ProfService,private router:Router) { }\n\n  user={\n    username:'',\n    password:''\n    }\n\n    user1={\n      email1:'',\n      name1:'',\n    password1:'',\n    password2:'',\n    code:''\n    }\n\n  ngOnInit(): void {\n  }\n\n  loginProf(){\n\n    this.profService.loginProf(this.user)\n  .subscribe(\n    res=>{\n    \n      if(res.tokenProf){\n        localStorage.setItem('tokenProf',res.tokenProf)\n        localStorage.setItem('profId',this.user.username)\n        alert(\"success\");\n        this.router.navigate(['/'])\n        }\n      if(res.msg)\n      {\n        alert(\"Wrong:Try Again!!\");\n        this.user.username='';\n        this.user.password='';\n      }\n\n    }\n  )\n\n  }\n\n  signupProf()\n  {\n    this.profService.signupProf(this.user1)\n    .subscribe(\n      res=>{\n        if(res.msg1){\n          alert(\"success\");\n          this.router.navigate(['/login-prof'])\n        }\n        if(res.msg2)\n        {\n          alert(\"Wrong:Try Again!!\");\n          this.user1.email1='';\n          this.user1.name1='';\n          this.user1.password1='';\n          this.user1.password2='';\n          this.user1.code='';\n        }\n  \n      }\n    )\n  }\n\n}\n","<!-- <form   (ngSubmit)=\"loginProf()\" #userlogin=\"ngForm\" fxLayoutAlign=\"stretch\" fxLayout=\"column\">\n    <mat-form-field>\n      <input matInput type=\"email\" name=\"username\"  placeholder=\"Email\"  #email='ngModel' pattern=\"^[a-z0-9.%+]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" [class.is-invalid]=\"email.invalid && email.touched\" [(ngModel)]=\"user.username\" required >      \n    </mat-form-field>\n\n    <mat-form-field>\n      \n      <input  matInput placeholder=\"Password\" type=\"password\" name=\"password\" #pass='ngModel'  [(ngModel)]=\"user.password\" minlength=\"8\" required>\n    </mat-form-field>\n    <button mat-raised-button type=\"submit\" color=\"primary\"   [disabled]=\"userlogin.form.invalid\" >Submit</button>   \n</form> -->\n\n\n<img src=\"assets/png/wave5.png\" class=\"bottom-img\">\n<div class=\"login-page\">\n  <mat-card class=\"mat-elevation-z12\">\n    <mat-card-title style=\"text-align:center;\">Professor</mat-card-title>\n    <mat-tab-group mat-stretch-tabs class=\"example-stretched-tabs\">\n      <mat-tab label=\"Sign In\">\n          <mat-card-content>\n            \n\n            <form   (ngSubmit)=\"loginProf()\" #userlogin=\"ngForm\" fxLayoutAlign=\"stretch\" fxLayout=\"column\">\n              <mat-form-field>\n                <input matInput type=\"email\" name=\"username\"  placeholder=\"Email\"  #email='ngModel' pattern=\"^[a-z0-9.%+]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" [class.is-invalid]=\"email.invalid && email.touched\" [(ngModel)]=\"user.username\" required >      \n                <mat-icon matSuffix>email</mat-icon>\n              </mat-form-field>\n          \n              <mat-form-field>\n                \n                <input  matInput placeholder=\"Password\" type=\"password\" name=\"password\" #pass='ngModel'  [(ngModel)]=\"user.password\" minlength=\"8\" required>\n                <mat-icon matSuffix>lock</mat-icon>\n              </mat-form-field>\n              <button mat-raised-button type=\"submit\" color=\"primary\"   [disabled]=\"userlogin.form.invalid\" >Submit</button>   \n          </form>\n\n\n          </mat-card-content>\n      </mat-tab>\n      <mat-tab label=\"Sign Up\">\n        <mat-card-content>\n        \n\n         \n          <form (ngSubmit)=\"signupProf()\" #signupuserform=\"ngForm\" fxLayoutAlign=\"stretch\" fxLayout=\"column\">\n            <mat-form-field>\n                \n                <input matInput type=\"text\" name=\"name1\" [(ngModel)]=\"user1.name1\" #name1='ngModel' placeholder=\"Name\"   required>\n                <mat-icon matSuffix>person</mat-icon>\n              </mat-form-field>\n\n              <mat-form-field>      \n                  <input matInput type=\"email\" name=\"email1\" placeholder=\"Email\"   #email1='ngModel' pattern=\"^[a-z0-9.%+]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" [class.is-invalid]=\"email1.invalid && email1.touched\" [(ngModel)]=\"user1.email1\" required>\n                  <mat-icon matSuffix>email</mat-icon>\n                </mat-form-field>\n        \n      \n              \n          \n                  <mat-form-field>\n                  <input matInput type=\"password\" name=\"password1\" placeholder=\"Password\"  #pass1='ngModel' class=\"form-control\"  [(ngModel)]=\"user1.password1\" minlength=\"8\" required>\n                  <mat-icon matSuffix>lock</mat-icon>\n                </mat-form-field>\n              \n              <mat-form-field>\n                  <input matInput type=\"password\" name=\"password2\" placeholder=\"Re-Enter Password\" #pass2='ngModel'  class=\"form-control\" [(ngModel)]=\"user1.password2\"  pattern=\"{{user1.password1}}\" required >\n                  <mat-icon matSuffix>lock</mat-icon>\n                </mat-form-field>\n\n                <mat-form-field>\n                  <input matInput type=\"password\" name=\"code\" placeholder=\"Enter The Code\" #code='ngModel'  class=\"form-control\" [(ngModel)]=\"user1.code\" required >\n                  <mat-icon matSuffix>vpn_key</mat-icon>\n                </mat-form-field>\n\n            <button type=\"submit\"  value=\"Submit\" class=\"btn btn-primary btn-block\" [disabled]=\"signupuserform.form.invalid\">Submit</button>\n</form>\n\n\n\n        </mat-card-content>\n      </mat-tab>\n    </mat-tab-group>\n  </mat-card>\n</div>\n<img src=\"assets/png/wave6.png\" class=\"footer-img\">\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { ProfService } from '../prof.service';\nimport { NotificationModel } from './notification.model'\n\n@Component({\n  selector: 'app-course-notification',\n  templateUrl: './course-notification.component.html',\n  styleUrls: ['./course-notification.component.css']\n})\nexport class CourseNotificationComponent implements OnInit {\n\n  notificationItem = new NotificationModel('','','');\n  notificationItems : NotificationModel[];\n\n  constructor(private profService:ProfService,public auth:AuthService) { }\n\n  ngOnInit(): void {\n    let c_Id = localStorage.getItem(\"detailsCourseId\");\n    this.profService.getNotification(c_Id)\n    .subscribe((data)=>{\n      this.notificationItems=JSON.parse(JSON.stringify(data));\n      console.log(this.notificationItems);\n    })\n  }\n\n\n\n\n}\n","\n<!-- <div class=\"container\">\n    <mat-icon color=\"primary\" (click)=\"addNotification()\" *ngIf=\"auth.loggedProfIn()\">notification_add</mat-icon>\n\n    <div class=\"row\" *ngFor='let item of notificationItems'>\n        <mat-icon class=\"admin\">admin_panel_settings</mat-icon>\n        <ul class=\"demo\">\n            <li>{{item.message}} <br><mat-icon class=\"time\">timer</mat-icon>  {{item.time}}</li> <br>     \n        </ul>\n\n    </div>\n\n</div> -->\n\n<h2 mat-dialog-title>Notifications</h2>\n<mat-dialog-content>\n\n    <div class=\"container\">\n      <p *ngIf=\"notificationItems.length == 0\">No Item To Show</p>\n    <div class=\"row\" *ngFor='let item of notificationItems'>\n        <mat-icon class=\"admin\">admin_panel_settings</mat-icon>\n        <ul class=\"demo\">\n            <li>{{item.message}} <br><mat-icon class=\"time\">timer</mat-icon>  {{item.time}}</li> <br>     \n        </ul>\n\n    </div>\n\n</div>\n\n\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button mat-button mat-dialog-close tabindex=\"-1\">Cancel</button>\n  </mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { MessageNotificationComponent } from '../message-notification/message-notification.component';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public auth:AuthService,private router:Router,private dialog:MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  logout()\n  {\n    localStorage.removeItem('tokenUser')\n    localStorage.removeItem('tokenProf')\n    localStorage.removeItem('userId')\n    localStorage.removeItem('profId')\n    localStorage.removeItem('editProfileId')\n    this.router.navigate(['/'])  \n  }\n\n  getMessage(){\n    const dialogRef = this.dialog.open(MessageNotificationComponent, {\n      height: '450px',\n      width:'500px'\n    });\n  }\n\n  \n\n}\n","<mat-toolbar class=\"primary\" fxLayout=\"row\">\n    <mat-toolbar-row class=\"head\">\n    <a mat-list-item  [routerLink]=\"['/']\">Home</a>\n    <a mat-list-item href=\"#courses\" *ngIf=\"! auth.logIn()\">Courses</a>\n    <a mat-list-item href=\"#chose\" *ngIf=\"! auth.logIn()\">Why Us?</a>\n    <a mat-list-item  [routerLink]=\"['/course-taken']\" *ngIf=\"auth.loggedProfIn()\" routerLinkActive=\"is-active\">My Courses </a>\n    <a mat-list-item  [routerLink]=\"['/course-enrolled']\" *ngIf=\"auth.loggedUserIn()\" routerLinkActive=\"is-active\">My Courses </a>\n    <a mat-list-item  [routerLink]=\"['/add-course']\" *ngIf=\"auth.loggedProfIn()\" routerLinkActive=\"is-active\">Add Course </a>\n    <span class=\"fill-remaining-space2\"></span>\n    <i mat-list-item class=\"fa-2x far fa-envelope message\" *ngIf=\"auth.loggedUserIn()\" (click)=\"getMessage()\"></i>\n    <!-- <mat-icon class=\"icon\" color=\"primary\" >circle_notifications</mat-icon> -->\n    <a mat-list-item  [routerLink]=\"['/login-user']\" *ngIf=\"! auth.logIn()\" routerLinkActive=\"is-active\">Student</a>\n    <a mat-list-item  [routerLink]=\"['/login-prof']\" *ngIf=\"! auth.logIn()\" routerLinkActive=\"is-active\">Professor</a>\n    <img mat-list-item class=\"d-flex mr-3 rounded-circle search\" src=\"assets/images/avatar1.png\" height=\"38px\" width=\"38px\" [matMenuTriggerFor]=\"outMenu\" *ngIf=\"auth.logIn()\" />\n    \n</mat-toolbar-row>\n</mat-toolbar>\n\n\n<mat-menu #outMenu=\"matMenu\">\n    <a mat-menu-item  [routerLink]=\"['/profile-prof']\" *ngIf=\"auth.loggedProfIn()\" routerLinkActive=\"is-active\">Profile</a>\n    <a mat-menu-item  [routerLink]=\"['/profile-user']\" *ngIf=\"auth.loggedUserIn()\" routerLinkActive=\"is-active\">Profile</a>\n    <a mat-menu-item  [routerLink]=\"['/course-requested']\" *ngIf=\"auth.loggedUserIn()\" routerLinkActive=\"is-active\">Pending Requests</a>\n    <a mat-menu-item  (click)=\"logout()\" *ngIf=\"auth.logIn()\">Logout </a>\n  </mat-menu>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer id=\"footer\">\n    <div class=\"footer-content\">\n        <h3 style=\"color: hsla(0, 0%, 100%, 0.3);\">SkillPlus</h3>\n        <p>SkillPlus is a platform helping to enrich your skills. Feel free to contact us at contact@skillplus.com with your scoops, comments or other inquiries.!</p>\n        <ul class=\"socials\">\n            <li><a href=\"#\"><i class=\"fa fa-facebook\"></i></a></li>\n            <li><a href=\"#\"><i class=\"fa fa-twitter\"></i></a></li>\n            <li><a href=\"#\"><i class=\"fa fa-google-plus\"></i></a></li>\n            <li><a href=\"#\"><i class=\"fa fa-youtube\"></i></a></li>\n            <li><a href=\"#\"><i class=\"fa fa-linkedin-square\"></i></a></li>\n        </ul>\n    </div>\n    <div class=\"footer-bottom\">\n        <p>© 2021 SkillPlus, Inc</p>\n    </div>\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { CourseModel } from '../add-course/course.model';\nimport { EnrollModel } from './enroll.model';\nimport { ProfileModel } from '../profile-user/profile.model';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-course-details',\n  templateUrl: './course-details.component.html',\n  styleUrls: ['./course-details.component.css']\n})\nexport class CourseDetailsComponent implements OnInit {\n\n  courseItem:CourseModel[];\n  enrollItem = new EnrollModel('','','','','','','','');\n  enrollItem1 = new EnrollModel('','','','','','','','');\n\n  // profileItem = new ProfileModel('','','','','','','','','','');\n  profileItem : ProfileModel[];\n  enrollRequest;\n\n  constructor(private userService:UserService,public auth:AuthService,private router:Router) { }\n\n  ngOnInit(): void {\n    let courseId=localStorage.getItem(\"detailsCourseId\");\n    this.userService.getCourseDetails(courseId)\n    .subscribe((data)=>\n    { \n      this.courseItem  =JSON.parse(JSON.stringify(data));\n      console.log(\"one\");\n      console.log(this.courseItem);\n    })\n\n    let userId=localStorage.getItem(\"userId\");\n    this.userService.getUserProfile(userId)\n    .subscribe((data)=>\n    {\n      this.profileItem = JSON.parse(JSON.stringify(data));\n      console.log(\"two\");\n      console.log(this.profileItem);\n\n\n      this.enrollItem.c_name=this.courseItem[0].name;\n      this.enrollItem.p_email=this.courseItem[0].email;\n      this.enrollItem.s_name=this.profileItem[0].name;\n      this.enrollItem.s_email=this.profileItem[0].email;\n\n      console.log(this.enrollItem);\n      this.userService.enrollStatus(this.enrollItem)\n      .subscribe((data)=>\n      {\n        this.enrollItem = JSON.parse(JSON.stringify(data));\n        this.enrollRequest=this.enrollItem[0].status;\n        console.log(this.enrollItem[0].status);\n        console.log(this.enrollRequest);\n        \n      }) \n      \n    })\n    \n      \n   \n\n  }\n\n  enroll(course){\n    \n    console.log(\"enroll\");\n    \n    this.enrollItem1.c_name=course.name;\n    this.enrollItem1.c_professor=course.professor;\n    this.enrollItem1.p_email=course.email;\n    this.enrollItem1.c_id=course._id;\n    this.enrollItem1.status=\"requested\";\n    this.enrollItem1.s_name=this.profileItem[0].name;\n    this.enrollItem1.s_email=this.profileItem[0].email;\n    this.enrollItem1.s_education=this.profileItem[0].education;\n  \n    console.log(this.enrollItem1);\n    this.userService.enrollCourse(this.enrollItem1)\n    .subscribe((data)=>\n    {\n      console.log(\"yes\")\n      this.enrollItem1 = JSON.parse(JSON.stringify(data));\n      this.router.navigate(['/details-course'])\n      console.log(this.enrollItem1)\n    })\n    window.location.reload();\n  }\n\n  cancel(course){\n    \n    console.log(\"cancel\");\n    \n  }\n\n}\n","<!-- <div class=\"container\" *ngFor='let course of courseItem'>\n<div class=\"row\">\n    <div class=\"col lg-4 md-4\" >\n     <table class=\"table\">\n       <tbody>\n         <tr>\n           <th>Course Name</th>\n           <td>{{ course.name.toUpperCase() }}</td>\n         </tr>\n         <tr>\n           <th>Professor</th>\n           <td>{{ course.professor }}</td>\n         </tr>\n         <tr>\n          <th>Type</th>\n          <td>{{ course.type }}</td>\n        </tr>\n        <tr>\n          <th>Level</th>\n          <td>{{ course.level }}</td>\n        </tr>\n       </tbody>\n     </table>\n   </div>\n\n   <div class=\"col lg-4 md-4\" >\n     <table class=\"table\">\n       <tbody>\n         <tr>\n           <th>Duration</th>\n           <td>{{ course.duration }}</td>\n         </tr>\n         <tr>\n          <th>Start Date</th>\n          <td>{{ course.startdate }}</td>\n        </tr>\n         <tr>\n           <th>Details</th>\n           <td>{{ course.details }}</td>\n         </tr>\n        \n       </tbody>\n     </table>\n   </div>\n\n   </div>\n   <button mat-raised-button disabled  *ngIf=\"auth.loggedUserIn() && enrollRequest== 'accept' \" >Enrolled</button>\n   <button mat-raised-button color=\"primary\" *ngIf=\"auth.loggedUserIn() && enrollRequest != 'requested' && enrollRequest != 'accept' \" (click)=\"enroll(course)\">Enroll</button>\n   <button mat-raised-button color=\"warn\" *ngIf=\"auth.loggedUserIn() && enrollRequest== 'requested' \" (click)=\"cancel(course)\">Requested</button>\n\n  </div> -->\n\n  <div class=\"container-fluid\" *ngFor='let course of courseItem'>\n   <div class=\"row\">\n     <div class=\"col-12 name\">\n       <h2> {{ course.name.toUpperCase() }} </h2>\n     </div>\n   </div>\n\n   <div class=\"row\">\n     <div class=\"col-12\">\n       <h3>About</h3>\n       <p> {{ course.details }} </p>\n     </div>\n   </div>\n\n   <div class=\"row\">\n    <div class=\"col-8\">\n      <h3>Eligibility</h3>\n      <p> {{course.qualification}} </p>\n    </div>\n    <div class=\"col-4\">\n      <h3>Course Level</h3>\n      <p> {{ course.level }} </p>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-8\">\n      <h3>Start Date</h3>\n      <p> {{ course.startdate }} </p>\n    </div>\n    <div class=\"col-4\">\n      <h3>Course Type</h3>\n      <p> {{ course.type }} </p>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-8\">\n      <h3>Course Duration</h3>\n      <p> {{ course.duration }} </p>\n    </div>\n    <div class=\"col-4\">\n      <h3>Professor</h3>\n      <p> {{ course.professor }} </p>\n    </div>\n  </div>\n  <br>\n  <div class=\"row\" *ngIf=\"!auth.logIn()\">\n    <div class=\"col-3\"></div>\n    <div class=\"col-6\">\n      <div class=\"register\">\n        <a href=\"/login-user\">SignIn For Register</a> </div>\n    </div>\n    <div class=\"col-3\"></div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"auth.loggedUserIn()\">\n    <div class=\"col-3\">\n      <button mat-raised-button disabled  *ngIf=\"auth.loggedUserIn() && enrollRequest== 'accept' \" >Enrolled-Visit Your Courses</button>\n      <button mat-raised-button color=\"primary\" *ngIf=\"auth.loggedUserIn() && enrollRequest != 'requested' && enrollRequest != 'accept' \" (click)=\"enroll(course)\">Enroll</button>\n      <button mat-raised-button color=\"warn\" *ngIf=\"auth.loggedUserIn() && enrollRequest== 'requested' \" (click)=\"cancel(course)\">Requested</button>\n    </div>\n  </div>\n  \n\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProfService } from '../prof.service';\nimport { CourseModel } from './course.model';\n\n@Component({\n  selector: 'app-add-course',\n  templateUrl: './add-course.component.html',\n  styleUrls: ['./add-course.component.css']\n})\nexport class AddCourseComponent implements OnInit {\n\n  constructor(private profService:ProfService,private router:Router) { }\n\n  courseItem = new CourseModel('','','','','','','','','','');\n\n\n  ngOnInit(): void {\n  this.courseItem.email = localStorage.getItem(\"profId\");\n  }\n\n  AddCourse(){\n    console.log(this.courseItem)\n    this.profService.addCourse(this.courseItem);\n    console.log(\"called\");\n    alert(\"success\");\n    this.router.navigate(['/course-taken']);\n  }\n\n}\n","\n<div class='card-header' style=\"width: 100\">\n\n    <div class='card' style=\"width: 100%\">\n   \n       <div class='card-header' style=\"width: 100\">\n           <h3>Add Course </h3>\n       </div>\n       <div class='card-body' style=\"width: 100\">\n           <div class=\"row justify-content-center\" >    \n               \n\n            <div class=\"col-md-8\"> \n        \n                <div class=\"panel\">\n                  <div class=\"panel-body\">\n                    \n                    \n               \n                    <!--/stories-->\n                    <form (ngSubmit)=\"AddCourse()\" #addcourseform=\"ngForm\">\n                      <div class=\"form-group\">\n                          <label >Course Name</label>\n                          <input type=\"text\" name=\"c_name\" [(ngModel)]=\"courseItem.name\" #cname='ngModel' placeholder=\"Type Name Of Course\" class=\"form-control\"  required>\n                          <small class=\"text-danger\" [class.d-none]=\"cname.valid || cname.touched\">Empty Value Not Supported</small>    \n        \n                        </div>\n\n                        <div class=\"form-group\">\n                          <label >Image</label>\n                          <input type=\"text\" name=\"c_img\" [(ngModel)]=\"courseItem.image\" #cimg='ngModel' class=\"form-control\"  required>\n                          <small class=\"text-danger\" [class.d-none]=\"cimg.valid || cimg.touched\">Empty Value Not Supported</small>    \n        \n                        </div>\n\n                        <div class=\"form-group\">\n                          <label >Teacher</label>\n                          <input type=\"text\" name=\"c_prof\" [(ngModel)]=\"courseItem.professor\" #cprof='ngModel' placeholder=\"Type Teacher\" class=\"form-control\"  required>\n                          <small class=\"text-danger\" [class.d-none]=\"cprof.valid || cprof.touched\">Empty Value Not Supported</small>    \n        \n                        </div>\n\n                        <div class=\"form-group\">\n                            <label >Email</label>\n                            <input type=\"text\" name=\"c_email\"  class=\"form-control\" [(ngModel)]=\"courseItem.email\" #cemail='ngModel' readonly  required>\n                            <!-- <small class=\"text-danger\" [class.d-none]=\"cemail.valid || cemail.touched\">Empty Value Not Supported</small>     -->\n          \n                          </div>\n\n                          <div class=\"form-group\">\n                            <label >Course Type</label>\n                            <input type=\"text\" name=\"c_type\" [(ngModel)]=\"courseItem.type\" #ctype='ngModel' placeholder=\"Type Type Of course\" class=\"form-control\" >\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label >Course Level</label>\n                            <input type=\"text\" name=\"c_level\" [(ngModel)]=\"courseItem.level\" #clevel='ngModel' placeholder=\"Type Level Of course\" class=\"form-control\" >\n                          </div>\n\n                          <div class=\"form-group\">\n                            <label >Start Date</label>\n                            <input type=\"text\" name=\"c_sdate\" [(ngModel)]=\"courseItem.startdate\" #csdate='ngModel' placeholder=\"Type Start Date Of course\" class=\"form-control\" >\n                          </div>\n\n                        <div class=\"form-group\">\n                            <label >Duration</label>\n                            <input type=\"text\" name=\"c_dur\" [(ngModel)]=\"courseItem.duration\" #cdur='ngModel' placeholder=\"Type Duration\" class=\"form-control\"  required>\n                            <small class=\"text-danger\" [class.d-none]=\"cdur.valid || cdur.touched\">Empty Value Not Supported</small>    \n          \n                          </div>\n\n                          <div class=\"form-group\">\n                            <label >Eligibility</label>\n                            <input type=\"text\" name=\"c_qualification\" [(ngModel)]=\"courseItem.qualification\" #cql='ngModel' placeholder=\"Type Required Qulaification\" class=\"form-control\" >\n          \n                          </div>\n\n                          <div class=\"form-group\">\n                            <label >Details</label>\n                            <input type=\"text\" name=\"c_details\" [(ngModel)]=\"courseItem.details\" #cdet='ngModel' placeholder=\"Type More Details\" class=\"form-control\" >\n          \n                          </div>\n\n                      <button type=\"submit\"  value=\"Submit\" class=\"btn btn-primary btn-block\" [disabled]=\"addcourseform.form.invalid\">Submit</button>\n          </form>\n\n          </div></div></div>\n\n   \n   \n       </div>\n   </div>\n   \n   \n\n","export class CourseModel{\n    constructor(\n    public name: string,\n    public image:string,\n    public professor:string,\n    public email:string|null,\n    public duration:string,\n    public details:string,\n    public qualification:string,\n    public type:string,\n    public startdate:string,\n    public level:string,\n    ){}\n}","export class ProfProfileModel{\n    constructor(\n    public name: string,\n    public email:string,\n    public password1:string,\n    public password2:string,\n    public address:string,\n    public dob:string,\n    public mothertongue:string,\n    public languages:string,\n    public hobbies:string,\n    public education:string,\n    public number:string\n    ){}\n}","export class MessageModel{\n    constructor(\n    public r_id: string,\n    public s_id:string,\n    public s_name:string,\n    public about:string,\n    public message:string\n    ){}\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { ProfService } from '../prof.service';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { CourseNotificationComponent } from '../course-notification/course-notification.component';\nimport { NotificationModel } from '../course-notification/notification.model'\nimport { CoursetakenRequestsComponent } from '../coursetaken-requests/coursetaken-requests.component';\nimport { CourseModel } from '../add-course/course.model';\nimport { UserService } from '../user.service';\nimport { EnrollModel } from '../course-details/enroll.model'\n\n\n\n\n@Component({\n  selector: 'app-coursetaken-details',\n  templateUrl: './coursetaken-details.component.html',\n  styleUrls: ['./coursetaken-details.component.css']\n})\nexport class CoursetakenDetailsComponent implements OnInit {\n\n  notificationItem = new NotificationModel('','','');\n  notificationItems : NotificationModel[];\n  courseItem:CourseModel[];\n  requestItem2:EnrollModel[];\n  strength;\n\n  constructor(private profService:ProfService,private router:Router,public auth:AuthService,private dialog:MatDialog,private userService:UserService) { }\n\n  ngOnInit(): void {\n    let courseId=localStorage.getItem(\"detailsCourseId\");\n    this.userService.getCourseDetails(courseId)\n    .subscribe((data)=>\n    { \n      this.courseItem  =JSON.parse(JSON.stringify(data));\n      console.log(this.courseItem);\n    })\n\n    let number_id=localStorage.getItem(\"detailsCourseId\");\n    this.profService.enrollNumber(number_id)\n    .subscribe((data)=>{\n      this.requestItem2  =JSON.parse(JSON.stringify(data));\n      console.log(this.requestItem2);\n      console.log(this.requestItem2.length);\n      this.strength=this.requestItem2.length;\n    })\n\n  }\n\n  getRequest(){\n    // this.router.navigate(['request-coursetaken']);\n    const dialogRef = this.dialog.open(CoursetakenRequestsComponent, {\n      height: '450px',\n      width:'500px'\n    });\n\n  }\n\n  createNotification(){\n    const dialogRef = this.dialog.open(CourseNotificationComponent, {\n      height: '450px',\n      width:'500px'\n    });\n  }\n\n  addNotification()\n  {\n    let foo = prompt('Type Message');\n    console.log(foo);\n    if(foo===null){\n      return;\n    }\n    if(foo?.trim()!=='' || foo?.trim()!==null)\n    {\n    let c_Id = localStorage.getItem(\"detailsCourseId\");\n    this.notificationItem.c_id=c_Id;\n    this.notificationItem.message=foo;\n    this.profService.addNotification(this.notificationItem);\n    \n    this.profService.getNotification(c_Id)\n    .subscribe((data)=>{\n      this.notificationItems=JSON.parse(JSON.stringify(data));\n      console.log(this.notificationItems);\n    })\n\n  }\n}\n\neditCourse(course)\n  {\n    localStorage.setItem(\"editCourseId\",course._id.toString());\n    this.router.navigate(['edit-course']);\n  }\n\n}\n","\n\n<div class=\"container\" *ngFor='let course of courseItem'>\n    <div class=\"row\">\n        <br>\n        <button class=\"request\" mat-raised-button (click)=\"getRequest()\" *ngIf=\"auth.loggedProfIn()\">Requests</button>\n        <br>\n        <br>\n        <mat-icon class=\"add\" (click)=\"addNotification()\" *ngIf=\"auth.loggedProfIn()\">notification_add</mat-icon>\n        <mat-icon class=\"campaign\" (click)=\"createNotification()\" *ngIf=\"auth.loggedProfIn()\">campaign</mat-icon>\n        <mat-icon class=\"notification\"  (click)=\"createNotification()\" *ngIf=\"auth.loggedUserIn()\">notifications</mat-icon>\n        </div>\n\n    <mat-card>\n<div class=\"row\">\n    <div class=\"col lg-4 md-4\" >\n     <table class=\"table table-hover table-borderless\">\n       <tbody>\n         <tr>\n           <th>Course Name</th>\n           <td>{{ course.name.toUpperCase() }}</td>\n         </tr>\n         <tr>\n          <th>Type</th>\n          <td>{{ course.type }}</td>\n        </tr>\n        <tr>\n          <th>Level</th>\n          <td>{{ course.level }}</td>\n        </tr>\n        <tr>\n          <th>Maximum Strength</th>\n          <td>40</td>\n        </tr>\n       </tbody>\n     </table>\n   </div>\n\n   <div class=\"col lg-4 md-4\" >\n     <table class=\"table table-hover table-borderless\">\n       <tbody>\n        <tr>\n          <th>Professor</th>\n          <td>{{ course.professor }}</td>\n        </tr>\n         <tr>\n           <th>Duration</th>\n           <td>{{ course.duration }}</td>\n         </tr>\n         <tr>\n          <th>Start Date</th>\n          <td>{{ course.startdate }}</td>\n        </tr>\n        <tr>\n          <th>Current Strength</th>\n          <td>{{strength}}</td>\n        </tr>\n       </tbody>\n     </table>\n     <i class=\"fa-2x fas fa-edit editicon\" (click)=\"editCourse(course)\" *ngIf=\"auth.loggedProfIn()\"></i>\n\n   </div>\n   </div>\n  </mat-card>\n\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProfService } from '../prof.service';\nimport { ProfProfileModel } from './profprofile.model';\n\n@Component({\n  selector: 'app-profile-prof',\n  templateUrl: './profile-prof.component.html',\n  styleUrls: ['./profile-prof.component.css']\n})\nexport class ProfileProfComponent implements OnInit {\n\n  profItem:ProfProfileModel[]=[] ;\n\n  constructor(private profService:ProfService,private router:Router) { }\n\n  ngOnInit(): void {\n    let profId=localStorage.getItem(\"profId\");\n    this.profService.getProfProfile(profId)\n    .subscribe((data)=>\n    {\n      this.profItem = JSON.parse(JSON.stringify(data));\n    })\n  }\n\n  editProfile(profile)\n  {\n    localStorage.setItem(\"editProfileId\",profile._id.toString());\n    this.router.navigate(['edit-prof']);\n  }\n\n}\n","<!-- <div class=\"container\" *ngFor='let profile of profItem'>\n    <div class=\"row\" >\n        <mat-icon color=\"warn\" (click)=\"editProfile(profile)\">edit</mat-icon>\n    </div>\n<div class=\"row\">\n    <div class=\"col lg-4 md-4\" >\n     <table class=\"table\">\n       <tbody>\n         <tr>\n           <th>Full Name</th>\n           <td>{{ profile.name.toUpperCase() }}</td>\n         </tr>\n         <tr>\n           <th>Address</th>\n           <td>{{ profile.address }}</td>\n         </tr>\n         <tr>\n           <th>Email Address</th>\n           <td>{{ profile.email }}</td>\n         </tr>\n         <tr>\n           <th>D.O.B</th>\n           <td>{{ profile.dob }}</td>\n         </tr>\n       </tbody>\n     </table>\n   </div>\n\n   <div class=\"col lg-4 md-4\" >\n     <table class=\"table\">\n       <tbody>\n         <tr>\n           <th>Mother Tongue</th>\n           <td>{{ profile.mothertongue }}</td>\n         </tr>\n         <tr>\n           <th>Other Languages</th>\n           <td>{{ profile.languages }}</td>\n         </tr>\n         <tr>\n           <th>Highest Education Qualification</th>\n           <td>{{ profile.education }}</td>\n         </tr>\n         <tr>\n           <th>Hobbies</th>\n           <td>{{ profile.hobbies }}</td>\n         </tr>\n       </tbody>\n     </table>\n   </div>\n\n   </div>\n</div> -->\n\n\n<html>\n<body class=\"bg-light\">\n\t<div class=\"container\" *ngFor='let profile of profItem'>\n\n     \t<div class=\"row d-flex justify-content-center\">\n            <div class=\"col-md-10 mt-5 pt-5\">\n             \t\n              <div class=\"row z-depth-3\">\n                 \t\n                <div class=\"col-sm-4 info rounded-left\">\n        \t\t        <div class=\"card-block text-center text-white\">\n                \t\t    <i class=\"fas fa-user-tie fa-7x mt-5\"></i>\n                    \t\t<h2 class=\"font-weight-bold mt-4\">{{ profile.name.toUpperCase() }}</h2>\n                    \t\t<p>{{ profile.dob }}</p> \n                        <i class=\"fa-2x far fa-edit edit\" (click)=\"editProfile(profile)\"></i>\n                \t\t</div>\n            \t\t</div>\n            \t\t\n                <div class=\"col-sm-8 bg-white rounded-right\">\n                    \t<h3 class=\"mt-3 text-center\">Information</h3>\n                    \t<hr class=\"bg-primary mt-0 w-25\">\n                   \t\t<div class=\"row\">\n                        \t<div class=\"col-sm-6\">\n                            \t<p class=\"font-weight-bold\">Email:</p>\n                           \t\t<h6 class=\" text-muted\">{{ profile.email }}</h6>\n                        \t</div>\n                        \t<div class=\"col-sm-6\">\n                            \t<p class=\"font-weight-bold\">Phone:</p>\n                           \t\t<h6 class=\"text-muted\">{{ profile.number }}</h6>\n                        \t</div>\n                    \t</div>\n                       \n                      <hr class=\"ruler\">\n                   \t\t<div class=\"row\">\n                        \t<div class=\"col-sm-6\">\n                           \t\t<p class=\"font-weight-bold\">Highest Graduation:</p>\n                          \t  \t<h6 class=\"text-muted\">{{profile.education}}</h6>\n                        \t</div>\n                        \t<div class=\"col-sm-6\">\n                            \t<p class=\"font-weight-bold\">Experience:</p>\n                            \t<h6 class=\"text-muted\">{{profile.hobbies}}</h6>\n                        \t</div>\n                    \t</div>\n\n                    \t\t<hr class=\"ruler\">\n                   \t\t<div class=\"row\">\n                        \t<div class=\"col-sm-6\">\n                           \t\t<p class=\"font-weight-bold\">Mother Tongue:</p>\n                          \t  \t<h6 class=\"text-muted\">{{profile.mothertongue}}</h6>\n                        \t</div>\n                        \t<div class=\"col-sm-6\">\n                            \t<p class=\"font-weight-bold\">Other Languages:</p>\n                            \t<h6 class=\"text-muted\">{{profile.languages}}</h6>\n                        \t</div>\n                    \t</div>\n                      <p class=\"mt-3 font-weight-bold\">Address:</p>\n                \t   \t<hr class=\"ruler\">\n                \t    <ul class=\"d-flex justify-content-center mt-4\">\n            \t        \t<h6 class=\"text-muted\">{{profile.address}}</h6>\n\t               \t\t</ul>  \n              \t\t</div>\n             \t</div>\n            </div>\n        </div>\n\t</div>\n</body>\n</html>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProfService } from '../prof.service';\n\n@Component({\n  selector: 'app-signup-prof',\n  templateUrl: './signup-prof.component.html',\n  styleUrls: ['./signup-prof.component.css']\n})\nexport class SignupProfComponent implements OnInit {\n\n  user={\n    email1:'',\n    name1:'',\n  password1:'',\n  password2:''\n  }\n\n  constructor(private profService:ProfService,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  signupProf()\n  {\n    this.profService.signupProf(this.user)\n    .subscribe(\n      res=>{\n        if(res.msg1){\n          alert(\"success\");\n          this.router.navigate(['/login-user'])\n        }\n        if(res.msg2)\n        {\n          alert(\"Wrong:Try Again!!\");\n        }\n  \n      }\n    )\n  }\n\n}\n","<div class='card-header' style=\"width: 100\">\n\n    <div class='card' style=\"width: 100%\">\n   \n\n       <div class='card-body' style=\"width: 100\">\n           <div class=\"row justify-content-center\" >    \n               \n\n            <div class=\"col-md-8\"> \n        \n                <div class=\"panel\">\n                  <div class=\"panel-body\">\n                    \n                    \n               \n    \n                    <form (ngSubmit)=\"signupProf()\" #signupuserform=\"ngForm\" fxLayoutAlign=\"stretch\" fxLayout=\"column\">\n                      <mat-form-field>\n                          \n                          <input matInput type=\"text\" name=\"name1\" [(ngModel)]=\"user.name1\" #name1='ngModel' placeholder=\"Name\"   required>\n        \n                        </mat-form-field>\n\n                        <mat-form-field>\n                    \n                            <input matInput type=\"email\" name=\"email1\" placeholder=\"Email\"   #email1='ngModel' pattern=\"^[a-z0-9.%+]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" [class.is-invalid]=\"email1.invalid && email1.touched\" [(ngModel)]=\"user.email1\" required>\n                        </mat-form-field>\n                  \n                \n                        \n                    \n                            <mat-form-field>\n                            <input matInput type=\"password\" name=\"password1\" placeholder=\"Password\"  #pass1='ngModel' class=\"form-control\" #password1='ngModel' [(ngModel)]=\"user.password1\" minlength=\"8\" required>\n                        </mat-form-field>\n                        \n                        <mat-form-field>\n        \n                            <input matInput type=\"password\" name=\"password2\" placeholder=\"Re-Enter Password\" #pass2='ngModel'  class=\"form-control\" [(ngModel)]=\"user.password2\" #password2='ngModel' pattern=\"{{user.password1}}\" required >\n                        </mat-form-field>\n\n                      <button type=\"submit\"  value=\"Submit\" class=\"btn btn-primary btn-block\" [disabled]=\"signupuserform.form.invalid\">Submit</button>\n          </form>\n\n          </div></div></div>\n\n   \n   \n       </div>\n   </div>\n\n","export class NotificationModel{\n    constructor(\n    public message: string|null,\n    public c_id:string|null,\n    public time:string|null\n    ){}\n}","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\n\nimport {AppComponent} from './app.component';\nimport {MatTabsModule} from '@angular/material/tabs';\n\n\n\n\n\nconst materialModules = [\n  MatTabsModule,\n  MatIconModule,\n  MatMenuModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatDialogModule,\n  MatIconModule,\n  MatDividerModule,\n  MatButtonModule,\n  FlexLayoutModule,\n  BrowserAnimationsModule,\n  BrowserModule,\n  MatSnackBarModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatCardModule\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ...materialModules\n  ],\n  exports: [\n    ...materialModules\n  ],\n})\n\nexport class AngularMaterialModule { }","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddCourseComponent } from './add-course/add-course.component';\nimport { CourseDetailsComponent } from './course-details/course-details.component';\nimport { CourseNotificationComponent } from './course-notification/course-notification.component';\nimport { CourseTakenComponent } from './course-taken/course-taken.component';\nimport { CoursesComponent } from './courses/courses.component';\nimport { CoursetakenDetailsComponent } from './coursetaken-details/coursetaken-details.component';\nimport { CoursetakenRequestsComponent } from './coursetaken-requests/coursetaken-requests.component';\nimport { EditCourseComponent } from './edit-course/edit-course.component';\nimport { EditProfComponent } from './edit-prof/edit-prof.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginProfComponent } from './login-prof/login-prof.component';\nimport { LoginUserComponent } from './login-user/login-user.component';\nimport { ProfileProfComponent } from './profile-prof/profile-prof.component';\nimport { ProfileUserComponent } from './profile-user/profile-user.component';\nimport { RequestedCoursesComponent } from './requested-courses/requested-courses.component';\nimport { SignupProfComponent } from './signup-prof/signup-prof.component';\nimport { SignupUserComponent } from './signup-user/signup-user.component';\n\nconst routes: Routes = [\n                       {path:'',component:HomeComponent},\n                       {path:'login-user',component:LoginUserComponent},\n                       {path:'signup-user',component:SignupUserComponent},\n                       {path:'login-prof',component:LoginProfComponent},\n                       {path:'signup-prof',component:SignupProfComponent},\n                       {path:'profile-prof',component:ProfileProfComponent},\n                       {path:'profile-user',component:ProfileUserComponent},\n                       {path:'edit-user',component:EditUserComponent},\n                       {path:'edit-prof',component:EditProfComponent},\n                       {path:'edit-course',component:EditCourseComponent},\n                       {path:'add-course',component:AddCourseComponent},\n                       {path:'course-taken',component:CourseTakenComponent},\n                       {path:'course-enrolled',component:CoursesComponent},\n                       {path:'details-course',component:CourseDetailsComponent},\n                       {path:'details-coursetaken',component:CoursetakenDetailsComponent},\n                       {path:'request-coursetaken',component:CoursetakenRequestsComponent},\n                       {path:'course-notification',component:CourseNotificationComponent},\n                       {path:'course-requested',component:RequestedCoursesComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  signupUser(user)\n  {\n    return this.http.post<any>(\"http://localhost:3000/signup-user\",user)\n  }\n  \n  loginUser(user)\n  {\n  return this.http.post<any>(\"http://localhost:3000/login-user\",user);\n  }\n\n  getUserProfile(id){\n    return this.http.get(\"http://localhost:3000/user-profile/\"+id);\n  }\n  getUserProfileOne(id){\n    console.log(id);\n    return this.http.get(\"http://localhost:3000/user-profileone/\"+id);\n  }\n\n  editUserProfile(profile){\n    \n    return this.http.put(\"http://localhost:3000/edit-user\",profile)\n    .subscribe(data=>{\n      console.log(data)\n    })\n\n  }\n\n  getAllCourses(){\n    return this.http.get(\"http://localhost:3000/all-courses\");\n  }\n  getCourseDetails(id){\n    return this.http.get(\"http://localhost:3000/course-details/\"+id);\n  }\n\n  // enrollCourse(enroll)\n  // {\n   \n  // console.log(\"yes\");\n  // console.log(enroll);\n  // return this.http.put(\"http://localhost:3000/enroll-course\",enroll);\n  // }\n  enrollCourse(enroll){\n    \n    return this.http.post(\"http://localhost:3000/enroll-course\",enroll);\n  }\n\n  getEnrolledCourses(id){\n    return this.http.get(\"http://localhost:3000/courses-enrolled/\"+id)\n  }\n\n  getRequestedCourses(id){\n\n    return this.http.get(\"http://localhost:3000/courses-requested/\"+id)\n  }\n\n  enrollStatus(enroll)\n  {\n  return this.http.post(\"http://localhost:3000/enroll-status\",enroll);\n  }\n\n  getMessage(id){\n\n    return this.http.get(\"http://localhost:3000/get-message/\"+id)\n  }\n\n  constructor(private http:HttpClient) { }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}